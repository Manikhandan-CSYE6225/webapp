name: Build and Share AMI

on:
  push:
    branches:
      - feature/packer-customimages

jobs:
#  integration-tests:
#    runs-on: ubuntu-latest
#
#    services:
#      mysql:
#        image: mysql:latest
#        env:
#          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD_TEST }}
#          MYSQL_DATABASE: ${{ secrets.DB_NAME_TEST }}
#        ports:
#          - 3306:3306
#        options: >-
#          --health-cmd="mysqladmin ping"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=3
#
#    strategy:
#      matrix:
#        node-version: [20.x]
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Node ${{ matrix.node-version }}
#        uses: actions/setup-node@v4
#        with:
#          node-version: ${{ matrix.node-version }}
#
#      - name: Install dependencies
#        run: npm install
#
#      - name: Tests
#        env:
#          DB_USERNAME_TEST: ${{ secrets.DB_USERNAME_TEST }}
#          DB_PASSWORD_TEST: ${{ secrets.DB_PASSWORD_TEST }}
#          DB_NAME_TEST: ${{ secrets.DB_NAME_TEST }}
#          DB_HOST_TEST: ${{ secrets.DB_HOST_TEST }}
#          DB_DIALECT_TEST: ${{ secrets.DB_DIALECT_TEST }}
#        run: npm run test

  build-ami:
    runs-on: ubuntu-latest
#    needs: integration-tests
    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Build application artifact
#        id: build
#        run: |
#          npm run zip
#
#      - name: Configure AWS CLI
#        uses: aws-actions/configure-aws-credentials@v3
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1

      - name: Set up Google Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

#      - name: Build AMI with Packer
#        run: |
#          packer init ./packer
#          packer build -var "artifact_path=/home/runner/work/webapp-csye6225/webapp-csye6225/webapp.zip" ./packer

      - name: Share Image with Another GCP Project
        run: |
          IMAGE_NAME=$(gcloud compute images list --filter="name~'packer-gcp-ubuntu-nodejs-*'" --format="value(name)" | head -n1)
          gcloud compute images add-iam-policy-binding $IMAGE_NAME \
          --member="serviceAccount:demo-616@steam-circlet-452023-e2.iam.gserviceaccount.com" \
          --role="roles/compute.imageUser" \
          --project="steam-circlet-452023-e2"

